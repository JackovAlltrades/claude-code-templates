name: Dependency Conflict Monitor

on:
  schedule:
    # Run at 2 AM UTC every day (off-hours for most timezones)
    - cron: '0 2 * * *'
    # Also run at 2 PM UTC for a second daily check
    - cron: '0 14 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_check:
        description: 'Force check all conflicts'
        required: false
        default: 'false'

jobs:
  check-conflicts:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests packaging
        
    - name: Run conflict monitor
      id: monitor
      run: |
        python scripts/dependency-conflict-monitor.py
        
        # Check if any resolutions were found
        if [ -f dependency-resolutions.log ]; then
          echo "resolutions_found=true" >> $GITHUB_OUTPUT
          echo "## Dependency Resolutions Found!" >> $GITHUB_STEP_SUMMARY
          cat dependency-resolutions.log >> $GITHUB_STEP_SUMMARY
        else
          echo "resolutions_found=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Upload reports
      uses: actions/upload-artifact@v3
      with:
        name: conflict-reports
        path: |
          conflict-check-*.json
          dependency-resolutions.log
          dependency-monitor.log
          update-*.sh
        retention-days: 30
        
    - name: Create issue if resolutions found
      if: steps.monitor.outputs.resolutions_found == 'true'
      uses: peter-evans/create-issue-from-file@v4
      with:
        title: "ðŸŽ‰ Dependency Conflicts Resolved"
        content-filepath: ./dependency-resolutions.log
        labels: |
          dependencies
          automated
          good-first-issue
          
    - name: Create Pull Request if update scripts exist
      if: steps.monitor.outputs.resolutions_found == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: Add dependency update scripts for resolved conflicts'
        title: 'Automated: Dependency Conflict Resolutions Available'
        body: |
          ## Dependency Conflicts Resolved! ðŸŽ‰
          
          This automated check found that some dependency conflicts have been resolved.
          Update scripts have been generated for safe updates.
          
          ### Next Steps:
          1. Review the update scripts
          2. Run them in a test environment first
          3. Update requirements.txt after successful testing
          
          Generated by the Dependency Conflict Monitor
        branch: update/resolved-conflicts-${{ github.run_number }}
        delete-branch: true